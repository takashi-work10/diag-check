// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  email  String  @unique
  image String?
  posts  Post[]  // ユーザーは複数の投稿を持つ（one-to-many）
  comments Comment[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  createdAt DateTime @default(now())
  // 各投稿は必ず1人のユーザーに属する
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  comments Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
}

enum Pattern {
  A
  B
  C
  D
}
model DiagnosisResult {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  pattern    Pattern
  answers    Int[]
  createdAt  DateTime  @default(now())
}




